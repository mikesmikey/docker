version: "3.5"
services:

  nginx:
    image: nginx:alpine
    container_name: ${CONTAINER_NAME}-nginx
    depends_on:
      - mongo
      - mongo-express
      - node
    networks:
      - local-network
    ports:
      - ${NGINX_PORT}:80
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
    restart: always
  
  node:
    build: ./node
    depends_on:
      - mongo
      - mongo-express
    container_name: ${CONTAINER_NAME}-node
    command: npm start
    networks:
      - local-network
    environment:
      - MONGO_USER
      - MONGO_PASSWORD
      - MONGO_DB
      - MONGO_ROOT_PASSWORD     
    volumes:
      - ./node:/home/node/node
      - /home/node/node/node_modules
    restart: always

  mongo:
    image: mongo
    container_name: ${CONTAINER_NAME}-mongo
    command: mongod --smallfiles
    networks:
      - local-network
    ports:
      - ${MONGO_PORT}:27017    
    environment:
      - MONGODB_USERNAME=${MONGO_USER}
      - MONGODB_PASSWORD=${MONGO_PASSWORD}
      - MONGODB_DATABASE=${MONGO_DB}
      - MONGODB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}  
    volumes:
      - data:/data
      - ./db/init-data/scripts:/scripts:ro
      - ./db/init-data:/docker-entrypoint-initdb.d:ro
      - ./db/backup:/backup
 
    restart: always
    
  mongo-express:
    image: mongo-express
    container_name: ${CONTAINER_NAME}-mongo-express
    networks:
      - local-network
    environment:
      - ME_CONFIG_SITE_BASEURL=/mongo-express
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_USER}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_USER}
    depends_on:
      - mongo
    restart: always

networks:
  local-network:
    name: ${CONTAINER_NAME}-local-network

volumes:
  data:
